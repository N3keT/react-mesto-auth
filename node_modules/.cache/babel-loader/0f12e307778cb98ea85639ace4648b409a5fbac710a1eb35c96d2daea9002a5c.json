{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._headers = options.headers;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getUserInfo() {\n    return fetch('https://nomoreparties.co/v1/cohort-52/users/me', {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  setUserInfo(data) {\n    return fetch('https://nomoreparties.co/v1/cohort-52/users/me', {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._checkResponse);\n  }\n  setAvatar(data) {\n    return fetch('https://mesto.nomoreparties.co/v1/cohort-52/users/me/avatar', {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._checkResponse);\n  }\n  getInitialCards() {\n    return fetch('https://mesto.nomoreparties.co/v1/cohort-52/cards', {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  addNewCard(data) {\n    return fetch('https://mesto.nomoreparties.co/v1/cohort-52/cards', {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._checkResponse);\n  }\n  deleteCard(cardId) {\n    return fetch(`https://mesto.nomoreparties.co/v1/cohort-52/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  // addLike(cardId) {\n  //     return fetch(`https://mesto.nomoreparties.co/v1/cohort-52/cards/${cardId}/likes`, {\n  //         method: \"PUT\",\n  //         headers: this._headers\n  //     })\n  //     .then(this._checkResponse);\n  // }\n\n  // deleteLike(cardId) {\n  //     return fetch(`https://mesto.nomoreparties.co/v1/cohort-52/cards/${cardId}/likes`, {\n  //         method: \"DELETE\",\n  //         headers: this._headers\n  //     })\n  //     .then(this._checkResponse);\n  // }\n\n  // changeLikeCardStatus(id, isLiked) {\n  //     (isLiked ? this.deleteLike(id) : this.addLike(id));\n  // }\n\n  changeLikeCardStatus(cardId, likeCardStatus) {\n    return fetch(`https://mesto.nomoreparties.co/v1/cohort-52/cards/${cardId}/likes`, {\n      method: likeCardStatus ? \"PUT\" : \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n}\nconst api = new Api({\n  headers: {\n    authorization: '9314592c-bb81-4273-936f-54cff7461679',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_headers","headers","_checkResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","method","then","setUserInfo","data","body","JSON","stringify","name","about","setAvatar","avatar","getInitialCards","addNewCard","link","deleteCard","cardId","changeLikeCardStatus","likeCardStatus","api","authorization"],"sources":["/Users/n3ket/Desktop/Yandex_practicum/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n    constructor(options) {\n        this._headers = options.headers;\n    }\n\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    getUserInfo() {\n        return fetch('https://nomoreparties.co/v1/cohort-52/users/me', {\n            method: \"GET\",\n            headers: this._headers\n        })\n        .then(this._checkResponse);\n    }\n\n    setUserInfo(data) {\n        return fetch('https://nomoreparties.co/v1/cohort-52/users/me', {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about\n            })\n        })\n        .then(this._checkResponse);\n    }\n\n    setAvatar(data) {\n        return fetch('https://mesto.nomoreparties.co/v1/cohort-52/users/me/avatar', {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: data.avatar\n            })\n        })\n        .then(this._checkResponse);\n    }\n\n    getInitialCards() {\n        return fetch('https://mesto.nomoreparties.co/v1/cohort-52/cards', {\n            method: \"GET\",\n            headers: this._headers\n        })\n        .then(this._checkResponse);\n    }\n\n    addNewCard(data) {\n        return fetch('https://mesto.nomoreparties.co/v1/cohort-52/cards', {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        })\n        .then(this._checkResponse);\n    }\n\n    deleteCard(cardId) {\n        return fetch(`https://mesto.nomoreparties.co/v1/cohort-52/cards/${cardId}`, {\n            method: \"DELETE\",\n            headers: this._headers\n        })\n        .then(this._checkResponse);\n    }\n\n    // addLike(cardId) {\n    //     return fetch(`https://mesto.nomoreparties.co/v1/cohort-52/cards/${cardId}/likes`, {\n    //         method: \"PUT\",\n    //         headers: this._headers\n    //     })\n    //     .then(this._checkResponse);\n    // }\n\n    // deleteLike(cardId) {\n    //     return fetch(`https://mesto.nomoreparties.co/v1/cohort-52/cards/${cardId}/likes`, {\n    //         method: \"DELETE\",\n    //         headers: this._headers\n    //     })\n    //     .then(this._checkResponse);\n    // }\n\n    // changeLikeCardStatus(id, isLiked) {\n    //     (isLiked ? this.deleteLike(id) : this.addLike(id));\n    // }\n\n    changeLikeCardStatus(cardId, likeCardStatus) {\n        return fetch(`https://mesto.nomoreparties.co/v1/cohort-52/cards/${cardId}/likes`, {\n          method: (likeCardStatus ? \"PUT\": \"DELETE\"),\n          headers: this._headers\n        })\n        .then(this._checkResponse);\n      }\n}\n\nconst api = new Api({\n    headers: {\n      authorization: '9314592c-bb81-4273-936f-54cff7461679',\n      'Content-Type': 'application/json'\n    }\n  });\n\n  export default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}