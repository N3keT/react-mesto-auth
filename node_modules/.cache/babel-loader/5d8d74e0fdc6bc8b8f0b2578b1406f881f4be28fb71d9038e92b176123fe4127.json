{"ast":null,"code":"var _jsxFileName = \"/Users/n3ket/Desktop/Yandex_practicum/mesto-react/src/components/Main.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main(props) {\n  _s();\n  // const[userName, setUserName] = useState('');\n  // const[userDescription, setUserDescription] = useState('');\n  // const[userAvatar, setUserAvatar] = useState('');\n  const [cards, setCards] = useState([]);\n  const currentUser = useContext(CurrentUserContext);\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      console.log(newCard);\n      // setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    });\n  }\n\n  useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(_ref => {\n      let [user, cards] = _ref;\n      // setUserName(user.name);\n      // setUserDescription(user.about);\n      // setUserAvatar(user.avatar);\n      setCards(cards);\n      // const reverse = cards.reverse();\n      // setCard(reverse);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__container-avatar\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"profile__avatar\",\n          style: {\n            backgroundImage: `url(${currentUser.avatar})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__avatar-overlay\",\n          onClick: props.onEditAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__name\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"profile__name-text\",\n            children: currentUser.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"profile__edit-button\",\n            onClick: props.onEditProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile__about\",\n          children: currentUser.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"profile__add-button\",\n        onClick: props.onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"elements__list\",\n        children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n          _id: card._id,\n          link: card.link,\n          name: card.name,\n          likes: card.likes,\n          onCardClick: props.onCardClick,\n          owner: card.owner,\n          onCardLike: handleCardLike\n        }, card._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"i1qbvVxwMo1neJ4vkYBGj+LVrsk=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useEffect","useState","useContext","CurrentUserContext","api","Card","Main","props","cards","setCards","currentUser","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","then","newCard","console","log","Promise","all","getUserInfo","getInitialCards","user","catch","err","backgroundImage","avatar","onEditAvatar","name","onEditProfile","about","onAddPlace","map","link","onCardClick","owner"],"sources":["/Users/n3ket/Desktop/Yandex_practicum/mesto-react/src/components/Main.js"],"sourcesContent":["import {useEffect, useState, useContext} from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\nimport Card from './Card';\n\nfunction Main(props) {\n    // const[userName, setUserName] = useState('');\n    // const[userDescription, setUserDescription] = useState('');\n    // const[userAvatar, setUserAvatar] = useState('');\n    const[cards, setCards] = useState([]);\n    const currentUser = useContext(CurrentUserContext);\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        \n        api.changeLikeCardStatus(card._id, !isLiked)\n        .then((newCard) => {\n            console.log(newCard);\n            // setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        });\n    } \n\n    useEffect(() => {\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\n            .then(([user, cards]) => {\n                // setUserName(user.name);\n                // setUserDescription(user.about);\n                // setUserAvatar(user.avatar);\n                setCards(cards);\n                // const reverse = cards.reverse();\n                // setCard(reverse);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    return (\n        <main>\n            <section className=\"profile\">\n                <div className=\"profile__container-avatar\">\n                    <img className=\"profile__avatar\" style={{ backgroundImage: `url(${currentUser.avatar})` }} />\n                    <div className=\"profile__avatar-overlay\" onClick={props.onEditAvatar}></div>\n                </div>\n                <div className=\"profile__info\">\n                    <div className=\"profile__name\">\n                        <h1 className=\"profile__name-text\">{currentUser.name}</h1>\n                        <button type=\"button\" className=\"profile__edit-button\" onClick={props.onEditProfile}></button>\n                    </div>\n                    <p className=\"profile__about\">{currentUser.about}</p>\n                </div>\n                <button type=\"button\" className=\"profile__add-button\" onClick={props.onAddPlace}></button>\n            </section>\n            <section className=\"elements\">\n                <ul className=\"elements__list\">\n                    {cards.map((card) => (\n                    <Card\n                        key={card._id}\n                        _id={card._id}\n                        link={card.link}\n                        name={card.name}\n                        likes={card.likes}\n                        onCardClick={props.onCardClick}\n                        owner={card.owner}\n                        onCardLike={handleCardLike}\n                    />\n                    ))}\n                </ul>\n            </section>\n        </main>\n    );\n}\n\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}